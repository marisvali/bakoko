package main

import (
	"os"
	. "playful-patterns.com/bakoko/ai"
	. "playful-patterns.com/bakoko/world"
	. "playful-patterns.com/bakoko/world/world-run"
	"testing"
	"time"
)

func def1() int {
	x := 0
	for i := 1; i < 100; i++ {
		time.Sleep(50 * time.Millisecond)
		x += i
	}
	return x
}

func TestReplay(t *testing.T) {
	os.Chdir("d:/gms/bakoko/")
	recordingFile := "recordings/recorded-inputs-2024-03-15-000000"

	totalDuration := 0.0
	for x := 0; x < 100; x++ {
		var worldRunner WorldRunner
		var ai PlayerAI
		playerInputs := DeserializeInputs(recordingFile)
		worldRunner.Initialize("", false)
		frameIdx := 0
		start := time.Now()
		for i := 0; i < len(playerInputs); i++ {
			// First, send the current world to players and get their reactions.
			var input Input
			input.Player1Input = playerInputs[frameIdx]
			input.Player2Input = ai.Step(worldRunner.GetWorld())

			// Second, use their reactions to update the world.
			worldRunner.Step(input)

			// Third, send any debug info generated by the step.
			//guiProxy.SendPaintData(worldRunner.GetDebugInfo())
			frameIdx++
		}
		totalDuration += time.Since(start).Seconds()
	}
	print("\ntotalDuration:", totalDuration)
}
